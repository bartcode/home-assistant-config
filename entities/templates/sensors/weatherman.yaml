---
trigger:
  platform: time_pattern
  minutes: "/1"
sensor:
  - name: weatherman_data
    state: "OK"
    attributes:
      weather_condition_now: >
        {% set cond_now = states.weather.openweathermap.state %}
        {% if states('sun.sun') == 'below_horizon' %}
            {% if cond_now == 'sunny' %} night {% elif cond_now == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond_now }} {% endif %}
        {% else %}
            {{ cond_now }}
        {% endif %}

      weather_condition: >
        {% set cond0 = states.sensor.openweathermap_forecast_condition.state %}
        {% set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
        {% set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
        {% set cond0_time = as_timestamp(states.sensor.openweathermap_forecast_time.state) %}
        {% if cond0_time < next_rising and next_rising < next_setting %}
            {% if cond0 == 'sunny' %} night {% elif cond0 == 'partlycloudy' %} night-partly-cloudy {% else %} {{ cond0 }} {% endif %}
        {% else %}
            {{ cond0 }}
        {% endif %}
      weather_temperature: >
        {{ states.sensor.openweathermap_forecast_temperature.state | round }}
      weather_timestamp: >
        {{ as_timestamp(states.sensor.openweathermap_forecast_time.state) | timestamp_custom('%I') | int }} {{ as_timestamp(states.sensor.openweathermap_forecast_time.state) | timestamp_custom('%p') }}
